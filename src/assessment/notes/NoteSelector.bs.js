// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Utils$ReactTemplate = require("../../shared/Utils.bs.js");

var component = ReasonReact.statelessComponent("NotesList");

function make(patientNotes, switchNote, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          className: "noteSelector"
                        }, React.createElement("select", {
                              defaultValue: "Select Note",
                              onChange: (function (evt) {
                                  var newNoteId = Utils$ReactTemplate.valueFromEvent(evt);
                                  return Curry._1(switchNote, List.find((function (note) {
                                                    return note[/* noteId */0] === newNoteId;
                                                  }), patientNotes));
                                })
                            }, $$Array.of_list(List.map((function (note) {
                                        return React.createElement("option", {
                                                    key: note[/* noteId */0],
                                                    value: note[/* noteId */0]
                                                  }, note[/* date */2].toUTCString());
                                      }), patientNotes))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
