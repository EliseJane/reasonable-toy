// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var V4 = require("uuid/v4");
var Js_option = require("bs-platform/lib/js/js_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var AddNew$ReactTemplate = require("../shared/AddNew.bs.js");
var Storage$ReactTemplate = require("../Storage.bs.js");
var AreYouSure$ReactTemplate = require("../shared/AreYouSure.bs.js");
var DataLoader$ReactTemplate = require("../DataLoader.bs.js");
var NewPatient$ReactTemplate = require("./NewPatient.bs.js");

var component = ReasonReact.reducerComponent("PatientsList");

function newPatient(name) {
  return /* record */[
          /* pid */V4(),
          /* names : :: */[
            name,
            /* [] */0
          ],
          /* addresses : :: */[
            /* record */[
              /* city */"San Francisco",
              /* state */"CA"
            ],
            /* [] */0
          ]
        ];
}

function make(teamPatients, teamTitle, switchPatient, removePatient, addPatient, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return ReasonReact.element(undefined, undefined, Curry._1(Storage$ReactTemplate.Context[/* Consumer */5][/* make */1], (function (storage) {
                                var match = self[/* state */1][/* newOpen */0];
                                var match$1 = self[/* state */1][/* confirmOpen */1];
                                return ReasonReact.element(undefined, undefined, DataLoader$ReactTemplate.make(Js_primitive.some(Js_option.getExn(storage)), "Patient/f2831186-85c1-42af-aab8-61d7c715d57a", /* array */[React.createElement("div", {
                                                      className: "patientsList"
                                                    }, React.createElement("div", undefined, teamTitle), React.createElement("div", {
                                                          className: "patients"
                                                        }, $$Array.of_list(List.map((function (patient) {
                                                                    return React.createElement("div", {
                                                                                key: patient[/* pid */0]
                                                                              }, React.createElement("span", {
                                                                                    className: "delete clickable",
                                                                                    onClick: (function () {
                                                                                        Curry._1(self[/* send */3], /* ChangeDeletingPatient */[patient]);
                                                                                        return Curry._1(self[/* send */3], /* ToggleConfirm */1);
                                                                                      })
                                                                                  }, "X"), React.createElement("div", {
                                                                                    className: "patient clickable",
                                                                                    onClick: (function () {
                                                                                        return Curry._1(switchPatient, patient);
                                                                                      })
                                                                                  }, List.hd(patient[/* names */1])[/* family */0]));
                                                                  }), teamPatients))), ReasonReact.element(undefined, undefined, AddNew$ReactTemplate.make((function () {
                                                                return Curry._1(self[/* send */3], /* ToggleNew */0);
                                                              }), /* array */[])), match ? ReasonReact.element(undefined, undefined, NewPatient$ReactTemplate.make((function (name) {
                                                                  Curry._1(self[/* send */3], /* ToggleNew */0);
                                                                  return Curry._1(addPatient, newPatient(/* record */[
                                                                                  /* family */name,
                                                                                  /* given */$$Array.of_list(/* :: */[
                                                                                        name,
                                                                                        /* [] */0
                                                                                      ]),
                                                                                  /* text */undefined
                                                                                ]));
                                                                }), (function () {
                                                                  return Curry._1(self[/* send */3], /* ToggleNew */0);
                                                                }), /* array */[])) : null, match$1 ? ReasonReact.element(undefined, undefined, AreYouSure$ReactTemplate.make((function () {
                                                                  Curry._1(removePatient, Js_option.getExn(self[/* state */1][/* deletingPatient */2]));
                                                                  return Curry._1(self[/* send */3], /* ToggleConfirm */1);
                                                                }), (function () {
                                                                  return Curry._1(self[/* send */3], /* ToggleConfirm */1);
                                                                }), "Are you sure you want to remove patient " + (List.hd(Js_option.getExn(self[/* state */1][/* deletingPatient */2])[/* names */1])[/* family */0] + (" from " + (teamTitle + "?"))), /* array */[])) : null)]));
                              })));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* newOpen */false,
                      /* confirmOpen */false,
                      /* deletingPatient */undefined
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* Update */Block.__(0, [/* record */[
                              /* newOpen */state[/* newOpen */0],
                              /* confirmOpen */!state[/* confirmOpen */1],
                              /* deletingPatient */state[/* deletingPatient */2]
                            ]]);
                } else {
                  return /* Update */Block.__(0, [/* record */[
                              /* newOpen */!state[/* newOpen */0],
                              /* confirmOpen */state[/* confirmOpen */1],
                              /* deletingPatient */state[/* deletingPatient */2]
                            ]]);
                }
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* newOpen */state[/* newOpen */0],
                            /* confirmOpen */state[/* confirmOpen */1],
                            /* deletingPatient */action[0]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.newPatient = newPatient;
exports.make = make;
/* component Not a pure module */
